// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/user.proto

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	user/user.proto

It has these top-level messages:
	LoginRequest
	LoginReply
	GetRolesRequest
	GetRolesReply
	GetUserInfoRequest
	GetUserInfoReply
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Passwd   string `protobuf:"bytes,2,opt,name=passwd" json:"passwd,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

type LoginReply struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *LoginReply) Reset()                    { *m = LoginReply{} }
func (m *LoginReply) String() string            { return proto.CompactTextString(m) }
func (*LoginReply) ProtoMessage()               {}
func (*LoginReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoginReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetRolesRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *GetRolesRequest) Reset()                    { *m = GetRolesRequest{} }
func (m *GetRolesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRolesRequest) ProtoMessage()               {}
func (*GetRolesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetRolesRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetRolesReply struct {
	Role string `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
}

func (m *GetRolesReply) Reset()                    { *m = GetRolesReply{} }
func (m *GetRolesReply) String() string            { return proto.CompactTextString(m) }
func (*GetRolesReply) ProtoMessage()               {}
func (*GetRolesReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetRolesReply) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type GetUserInfoRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *GetUserInfoRequest) Reset()                    { *m = GetUserInfoRequest{} }
func (m *GetUserInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserInfoRequest) ProtoMessage()               {}
func (*GetUserInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetUserInfoRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetUserInfoReply struct {
	Type   string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *GetUserInfoReply) Reset()                    { *m = GetUserInfoReply{} }
func (m *GetUserInfoReply) String() string            { return proto.CompactTextString(m) }
func (*GetUserInfoReply) ProtoMessage()               {}
func (*GetUserInfoReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetUserInfoReply) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GetUserInfoReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "user.LoginRequest")
	proto.RegisterType((*LoginReply)(nil), "user.LoginReply")
	proto.RegisterType((*GetRolesRequest)(nil), "user.GetRolesRequest")
	proto.RegisterType((*GetRolesReply)(nil), "user.GetRolesReply")
	proto.RegisterType((*GetUserInfoRequest)(nil), "user.GetUserInfoRequest")
	proto.RegisterType((*GetUserInfoReply)(nil), "user.GetUserInfoReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SSUser service

type SSUserClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error)
	GetRoles(ctx context.Context, in *GetRolesRequest, opts ...grpc.CallOption) (*GetRolesReply, error)
	GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoReply, error)
}

type sSUserClient struct {
	cc *grpc.ClientConn
}

func NewSSUserClient(cc *grpc.ClientConn) SSUserClient {
	return &sSUserClient{cc}
}

func (c *sSUserClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error) {
	out := new(LoginReply)
	err := grpc.Invoke(ctx, "/user.SSUser/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sSUserClient) GetRoles(ctx context.Context, in *GetRolesRequest, opts ...grpc.CallOption) (*GetRolesReply, error) {
	out := new(GetRolesReply)
	err := grpc.Invoke(ctx, "/user.SSUser/GetRoles", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sSUserClient) GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoReply, error) {
	out := new(GetUserInfoReply)
	err := grpc.Invoke(ctx, "/user.SSUser/GetUserInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SSUser service

type SSUserServer interface {
	Login(context.Context, *LoginRequest) (*LoginReply, error)
	GetRoles(context.Context, *GetRolesRequest) (*GetRolesReply, error)
	GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoReply, error)
}

func RegisterSSUserServer(s *grpc.Server, srv SSUserServer) {
	s.RegisterService(&_SSUser_serviceDesc, srv)
}

func _SSUser_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SSUserServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.SSUser/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SSUserServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SSUser_GetRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRolesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SSUserServer).GetRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.SSUser/GetRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SSUserServer).GetRoles(ctx, req.(*GetRolesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SSUser_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SSUserServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.SSUser/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SSUserServer).GetUserInfo(ctx, req.(*GetUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SSUser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.SSUser",
	HandlerType: (*SSUserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _SSUser_Login_Handler,
		},
		{
			MethodName: "GetRoles",
			Handler:    _SSUser_GetRoles_Handler,
		},
		{
			MethodName: "GetUserInfo",
			Handler:    _SSUser_GetUserInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/user.proto",
}

func init() { proto.RegisterFile("user/user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 341 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xcd, 0x4e, 0xc2, 0x40,
	0x18, 0xb4, 0x04, 0x08, 0x7e, 0xfe, 0x40, 0x3e, 0x94, 0x60, 0x63, 0xa2, 0xae, 0x07, 0x0d, 0x89,
	0x2c, 0x85, 0x8b, 0xf1, 0x60, 0x22, 0x17, 0x34, 0xf1, 0x04, 0xf1, 0xe2, 0xad, 0xe8, 0x5a, 0x1b,
	0xcb, 0xee, 0xda, 0xdd, 0x6a, 0xb8, 0xfa, 0x0a, 0x3e, 0x98, 0x07, 0x5f, 0xc1, 0x07, 0x31, 0xbb,
	0x6d, 0x11, 0x08, 0xf1, 0xd2, 0x7c, 0xb3, 0xdf, 0xcc, 0x74, 0x67, 0x5a, 0xa8, 0x26, 0x8a, 0xc5,
	0xd4, 0x3c, 0xda, 0x32, 0x16, 0x5a, 0x60, 0xd1, 0xcc, 0xee, 0x7e, 0x20, 0x44, 0x10, 0x31, 0xea,
	0xcb, 0x90, 0xfa, 0x9c, 0x0b, 0xed, 0xeb, 0x50, 0x70, 0x95, 0x72, 0x48, 0x1f, 0x36, 0x6f, 0x45,
	0x10, 0xf2, 0x21, 0x7b, 0x4d, 0x98, 0xd2, 0xe8, 0x42, 0xc5, 0xa8, 0xb8, 0x3f, 0x61, 0x4d, 0xe7,
	0xd0, 0x39, 0x5d, 0x1f, 0xce, 0x30, 0x36, 0xa0, 0x2c, 0x7d, 0xa5, 0xde, 0x1f, 0x9b, 0x05, 0xbb,
	0xc9, 0x10, 0x21, 0x00, 0x99, 0x87, 0x8c, 0xa6, 0xb8, 0x03, 0x25, 0x2d, 0x5e, 0x18, 0xcf, 0xe4,
	0x29, 0x20, 0x27, 0x50, 0x1d, 0x30, 0x3d, 0x14, 0x11, 0x53, 0xf9, 0xab, 0x56, 0x13, 0x8f, 0x61,
	0xeb, 0x8f, 0x68, 0xfc, 0x10, 0x8a, 0xb1, 0x88, 0xf2, 0xdb, 0xd8, 0x99, 0xb4, 0x00, 0x07, 0x4c,
	0xdf, 0x29, 0x16, 0xdf, 0xf0, 0x27, 0xf1, 0xbf, 0xe1, 0x25, 0xd4, 0x16, 0xb8, 0x99, 0xa7, 0x9e,
	0xca, 0x99, 0xa7, 0x99, 0x4d, 0x3a, 0xa5, 0x7d, 0x9d, 0xa8, 0x3c, 0x5d, 0x8a, 0xba, 0x5f, 0x0e,
	0x94, 0x47, 0x23, 0xa3, 0xc7, 0x6b, 0x28, 0xd9, 0xa0, 0x88, 0x6d, 0x5b, 0xf3, 0x7c, 0x73, 0x6e,
	0x6d, 0xe1, 0x4c, 0x46, 0x53, 0xb2, 0xf7, 0xf1, 0xfd, 0xf3, 0x59, 0xa8, 0x93, 0x6d, 0xfa, 0xe6,
	0xd9, 0xef, 0x42, 0x23, 0xb3, 0xbc, 0x70, 0x5a, 0x78, 0x0e, 0x95, 0x3c, 0x25, 0xee, 0xa6, 0xc2,
	0xa5, 0x7a, 0xdc, 0xfa, 0xf2, 0xb1, 0xb1, 0x5c, 0xc3, 0x2b, 0xd8, 0x98, 0x8b, 0x83, 0xcd, 0x19,
	0x6b, 0xa9, 0x0d, 0xb7, 0xb1, 0x62, 0x63, 0x2d, 0xfa, 0x47, 0xf7, 0x07, 0x41, 0xa8, 0x9f, 0x93,
	0x71, 0xfb, 0x41, 0x4c, 0x68, 0xd2, 0xe9, 0x75, 0xbc, 0x9e, 0xe7, 0x75, 0xa9, 0x52, 0x67, 0x72,
	0x6c, 0x2f, 0x3a, 0x2e, 0xdb, 0xbf, 0xa3, 0xf7, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xe4, 0xd3, 0x62,
	0xd3, 0x54, 0x02, 0x00, 0x00,
}
